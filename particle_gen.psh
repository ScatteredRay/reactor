// Copyright (c) 2013, Nicholas "Indy" Ray. All rights reserved.
// See the LICENSE file for usage, modification, and distribution terms.
#version 420

layout (rgba32f) uniform imageBuffer particle_buffer;
layout (binding = 0) uniform atomic_uint particle_count;

uniform uint max_particles;

void main(void)
{
  uint pidx = atomicCounterIncrement(particle_count);
  // The race condition for this is that we don't add a particle we could have when near max.
  if(pidx >= max_particles)
  {
    atomicCounterDecrement(particle_count);
  }
  else
  {
    // Add particle.
    imageStore(particle_buffer, int(pidx), vec4(0.75, 0.75, 0.75, 1.00));
  }
}
